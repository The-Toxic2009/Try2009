name: RDP-with-GoogleDrive

on:
  workflow_dispatch:

jobs:
  secure_rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Configure RDP settings
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP" protocol=TCP dir=in localport=3389 action=allow
          Restart-Service TermService -Force
          Write-Host "RDP configured"

      - name: Create RDP user
        shell: pwsh
        run: |
          $user = "RDP"
          $pass = "124421Sg"
          $securePass = ConvertTo-SecureString $pass -AsPlainText -Force
          if (-not (Get-LocalUser -Name $user -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $user -Password $securePass -FullName "Remote User"
            Add-LocalGroupMember -Group Administrators -Member $user
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member $user
          } else {
            Set-LocalUser -Name $user -Password $securePass
          }
          echo "RDP_USER=$user" >> $env:GITHUB_ENV
          echo "RDP_PASS=$pass" >> $env:GITHUB_ENV

      - name: Install Chocolatey
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      - name: Install tools
        shell: pwsh
        run: |
          choco install tailscale -y
          choco install rclone -y
          choco install winfsp -y

      - name: Start Tailscale
        shell: pwsh
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$env:TAILSCALE_AUTH_KEY --hostname="gh-rdp-$env:GITHUB_RUN_ID"
          $ip = ""
          for ($i=0; $i -lt 12; $i++) {
            Start-Sleep -Seconds 5
            $ip = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            if ($ip -and $ip.Trim() -ne "") { break }
          }
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV
          Write-Host "Tailscale connected: $ip"

      - name: Setup rclone config
        shell: pwsh
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_TOKEN: ${{ secrets.GOOGLE_TOKEN }}
        run: |
          $configDir = "$env:USERPROFILE\.config\rclone"
          if (!(Test-Path $configDir)) { New-Item -ItemType Directory -Path $configDir -Force }
          $configContent = "[gdrive]`ntype = drive`nclient_id = $env:GOOGLE_CLIENT_ID`nclient_secret = $env:GOOGLE_CLIENT_SECRET`nscope = drive`ntoken = $env:GOOGLE_TOKEN"
          $configPath = "$configDir\rclone.conf"
          $configContent | Set-Content -Path $configPath -Encoding UTF8
          Write-Host "rclone config created"

      - name: Test and mount Google Drive
        shell: pwsh
        run: |
          Write-Host "Testing rclone connection..."
          rclone ls gdrive: --max-depth 1
          Write-Host "Starting mount process..."
          Start-Job -ScriptBlock { rclone mount gdrive: G: --config "$env:USERPROFILE\.config\rclone\rclone.conf" --vfs-cache-mode full --network-mode }
          for ($i=0; $i -lt 15; $i++) {
            Start-Sleep -Seconds 5
            if (Test-Path "G:\") { 
              Write-Host "Google Drive mounted as G:\"
              break 
            }
            Write-Host "Waiting for mount... ($($i+1)/15)"
          }

      - name: Show connection info
        shell: pwsh
        run: |
          Write-Host ""
          Write-Host "RDP CONNECTION DETAILS:"
          Write-Host "======================="
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          Write-Host "Username: $env:RDP_USER"
          Write-Host "Password: $env:RDP_PASS"
          Write-Host "Google Drive: G:\ drive"
          Write-Host "======================="

      - name: Keep alive
        shell: pwsh
        run: |
          Write-Host "RDP session active - Connect using the details above"
          while ($true) {
            Start-Sleep -Seconds 300
            if (!(Test-Path "G:\")) {
              Write-Host "Remounting Google Drive..."
              Start-Job -ScriptBlock { rclone mount gdrive: G: --config "$env:USERPROFILE\.config\rclone\rclone.conf" --vfs-cache-mode full --network-mode }
            }
          }
