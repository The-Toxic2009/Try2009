name: RDP-and-Drive-BiSync

on:
  workflow_dispatch:

jobs:
  rdp_bisync:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      # --- Basic RDP, Chocolatey, and Tailscale setup (reduced for clarity) ---
      - name: Configure RDP and create user
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP" protocol=TCP dir=in localport=3389 action=allow
          Restart-Service TermService -Force
          $user = "RDP"
          $pass = "124421Sg"
          $securePass = ConvertTo-SecureString $pass -AsPlainText -Force
          if (-not (Get-LocalUser -Name $user -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $user -Password $securePass -FullName "Remote User"
            Add-LocalGroupMember -Group Administrators -Member $user
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member $user
          } else {
            Set-LocalUser -Name $user -Password $securePass
          }
          echo "RDP_USER=$user" >> $env:GITHUB_ENV
          echo "RDP_PASS=$pass" >> $env:GITHUB_ENV

      - name: Install Chocolatey, Tailscale, rclone
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          choco install tailscale -y
          choco install rclone -y

      - name: Start Tailscale
        shell: pwsh
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$env:TAILSCALE_AUTH_KEY --hostname="gh-rdp-$env:GITHUB_RUN_ID"
          $ip = ""
          for ($i=0; $i -lt 12; $i++) {
            Start-Sleep -Seconds 5
            $ip = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            if ($ip -and $ip.Trim() -ne "") { break }
          }
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV

      - name: Configure rclone for Google Drive
        shell: pwsh
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_TOKEN: ${{ secrets.GOOGLE_TOKEN }}
        run: |
          $configDir = "$env:USERPROFILE\.config\rclone"
          if (!(Test-Path $configDir)) { New-Item -ItemType Directory -Path $configDir -Force }
          $configContent = "[gdrive]`ntype = drive`nclient_id = $env:GOOGLE_CLIENT_ID`nclient_secret = $env:GOOGLE_CLIENT_SECRET`nscope = drive`ntoken = $env:GOOGLE_TOKEN"
          $configPath = "$configDir\rclone.conf"
          $configContent | Set-Content -Path $configPath -Encoding UTF8

      # --- Initial download from Google Drive /storage to Desktop\persistent ---
      - name: Download from storage (Drive) to Desktop\persistent
        shell: pwsh
        run: |
          $persistent = "$env:USERPROFILE\Desktop\persistent"
          if (!(Test-Path $persistent)) { New-Item -ItemType Directory -Path $persistent }
          rclone copy "gdrive:/storage" $persistent --config "$env:USERPROFILE\.config\rclone\rclone.conf" --progress

      # --- Bi-directional sync every 30 min; final sync at end, keep alive ---
      - name: Bi-directional sync every 30 min; final sync at exit
        shell: pwsh
        run: |
          $local = "$env:USERPROFILE\Desktop\persistent"
          $remote = "gdrive:/storage"
          # First run with --resync to initialize state
          rclone bisync $local $remote --config "$env:USERPROFILE\.config\rclone\rclone.conf" --resync --verbose
          try {
            while ($true) {
              Write-Host "Starting bisync..."
              rclone bisync $local $remote --config "$env:USERPROFILE\.config\rclone\rclone.conf" --verbose
              Write-Host "Bi-directional sync complete. Sleeping for 30 minutes..."
              Start-Sleep -Seconds 1800
            }
          }
          finally {
            Write-Host "Final sync before exit..."
            rclone bisync $local $remote --config "$env:USERPROFILE\.config\rclone\rclone.conf" --verbose
            Write-Host "Final sync complete."
          }

      - name: Show connection info
        shell: pwsh
        run: |
          Write-Host ""
          Write-Host "======================"
          Write-Host "RDP CONNECTION DETAILS"
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          Write-Host "Username: $env:RDP_USER"
          Write-Host "Password: $env:RDP_PASS"
          Write-Host "Google Drive folder: Desktop\persistent  <-->  /storage"
          Write-Host "======================"
